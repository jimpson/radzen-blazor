$button-base-background-color: var(--rz-primary) !default;
$button-base-color: var(--rz-text-contrast-color) !default;
$button-hover-shadow: inset 0 -3px 0 0 rgba(255, 255, 255, 0.2) !default;
$button-hover-gradient: linear-gradient(rgba(#fff, 0.1), rgba(#fff, 0.1)) !default;
$button-active-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.1) !default;
$button-active-gradient: linear-gradient(rgba(#000, 0.1), rgba(#000, 0.1)) !default;
$button-focus-outline: none !default;
$button-border-radius: var(--rz-border-radius) !default;
$button-shadow: none !default;
$button-transition: var(--rz-transition-all) !default;
$button-disabled-opacity: 0.2 !default;
$button-line-height: 1.25rem !default;
$button-vertical-align: top !default;
$button-background-size: auto !default;
$button-hover-background-size: $button-background-size !default;
$button-active-background-size: $button-background-size !default;

$button-sizes: () !default;

$button-sizes: map-merge(
  (
    md: (
      font-size: var(--rz-body-font-size),
      padding: 0.5rem 1rem,
      line-height: 1.25rem,
      height: auto,
      font-weight: 600,
      icon: (
        font-size: var(--rz-icon-size),
        line-height: var(--rz-icon-size),
        width: var(--rz-icon-size),
        height: var(--rz-icon-size)
      ),
      text-with-icon-padding: 0.5rem 1rem 0.5rem 0.5rem,
      icon-only-padding: 0.5rem
    ),
    sm: (
      font-size: var(--rz-body-font-size),
      padding: 0.25rem 0.75rem,
      line-height: 1.25rem,
      height: auto,
      icon: (
        font-size: var(--rz-icon-size),
        line-height: var(--rz-icon-size),
        width: var(--rz-icon-size),
        height: var(--rz-icon-size)
      ),
      text-with-icon-padding: 0.25rem 0.75rem 0.25rem 0.25rem,
      icon-only-padding: 0.25rem
    )
  ),
  $button-sizes
);

rz-button[type],
p-button[type] {
  -webkit-appearance: none;
}

$button-styles: () !default;

$button-styles: map-merge(
  (
    primary: (
      background-color: var(--rz-primary),
      color: var(--rz-text-contrast-color)
    ),
    light: (
      background-color: var(--rz-base-200),
      color: var(--rz-text-color)
    ),
    secondary: (
      background-color: var(--rz-secondary),
      color: var(--rz-text-contrast-color)
    ),
    info: (
      background-color: var(--rz-info),
      color: var(--rz-text-contrast-color)
    ),
    warning: (
      background-color: var(--rz-warning),
      color: var(--rz-text-contrast-color)
    ),
    error: (
      background-color: var(--rz-danger),
      color: var(--rz-text-contrast-color)
    ),
    danger: (
      background-color: var(--rz-danger),
      color: var(--rz-text-contrast-color)
    ),
    success: (
      background-color: var(--rz-success),
      color: var(--rz-text-contrast-color)
    )
  ),
  $button-styles
);

// Button CSS variables

:root {
  --rz-button-base-background-color: #{$button-base-background-color};
  --rz-button-base-color: #{$button-base-color};
  --rz-button-hover-shadow: #{$button-hover-shadow};
  --rz-button-hover-gradient: #{$button-hover-gradient};
  --rz-button-active-shadow: #{$button-active-shadow};
  --rz-button-active-gradient: #{$button-active-gradient};
  --rz-button-focus-outline: #{$button-focus-outline};
  --rz-button-border-radius: #{$button-border-radius};
  --rz-button-shadow: #{$button-shadow};
  --rz-button-transition: #{$button-transition};
  --rz-button-disabled-opacity: #{$button-disabled-opacity};
  --rz-button-line-height: #{$button-line-height};
  --rz-button-vertical-align: #{$button-vertical-align};
  --rz-button-background-size: #{$button-background-size};
  --rz-button-hover-background-size: #{$button-hover-background-size};
  --rz-button-active-background-size: #{$button-active-background-size};
}

.rz-button {
  -webkit-appearance: none;
  border-radius: var(--rz-button-border-radius);
  background-color: var(--rz-button-base-background-color);
  color: var(--rz-button-base-color);
  border: none;
  outline: none;
  line-height: var(--rz-button-line-height);
  font-size: 1.0625rem;
  box-shadow: var(--rz-button-shadow);
  transition: var(--rz-button-transition);
  background-size: var(--rz-button-background-size);
  background-repeat: no-repeat;

  &:focus {
    outline: var(--rz-button-focus-outline);
  }

  &:not(.rz-state-disabled) {
    cursor: pointer;

    &:hover {
      &:not(:active) {
        background-image: var(--rz-button-hover-gradient);
        background-size: var(--rz-button-hover-background-size);
        box-shadow: var(--rz-button-hover-shadow);
      }
    }

    &:active {
      background-image: var(--rz-button-active-gradient);
      background-size: var(--rz-button-active-background-size);
      box-shadow: var(--rz-button-active-shadow);
    }
  }

  &.rz-state-disabled {
    opacity: var(--rz-button-disabled-opacity);
    cursor: initial;
  }

  .rz-button-text {
    vertical-align: var(--rz-button-vertical-align);
    line-height: 1.5rem;
  }

  .rzi {
    vertical-align: var(--rz-button-vertical-align);
  }

  @each $style, $button in $button-styles {
    &.btn-#{$style} {
      @each $name, $value in $button {
        #{$name}: #{$value};
      }
    }
  }

  @each $size, $button in $button-sizes {
    &-#{$size} {
      font-size: map-get($button, font-size);
      font-weight: map-get($button, font-weight);
      padding: map-get($button, padding);
      height: map-get($button, height);
      line-height: map-get($button, line-height);
      letter-spacing: map-get($button, letter-spacing);
      text-transform: map-get($button, text-transform);

      &.rz-button-text-icon-left {
        padding: map-get($button, text-with-icon-padding);
      }

      &.rz-button-icon-only {
        padding: map-get($button, icon-only-padding);
      }

      .rzi {
        @each $name, $value in map-get($button, icon) {
          #{$name}: #{$value};
        }
      }
    }
  }

  &:not(.rz-button-icon-only) .rz-button-icon-left {
    margin-right: 0.25rem;
  }

  &:not(.rz-button-icon-only) .rz-button-icon-left {
    margin-right: 0.25rem;
  }

}

@keyframes button-icon-spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}
